// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders properly 1`] = `
<RCTSafeAreaView
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <Modal
      animationType="none"
      hardwareAccelerated={false}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onRequestClose={[Function]}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "height": 1334,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 750,
          }
        }
      />
      <View
        onLayout={[Function]}
        pointerEvents="box-none"
        style={
          Array [
            Array [
              Object {
                "margin": 37.5,
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                ],
              },
              Object {
                "flex": 1,
                "justifyContent": "center",
              },
              undefined,
              Object {
                "margin": 0,
              },
            ],
            Object {
              "paddingBottom": 0,
            },
          ]
        }
      >
        <View
          hideModalContentWhileAnimating={false}
          onModalHide={[Function]}
          onModalWillHide={[Function]}
          onModalWillShow={[Function]}
          pointerEvents="box-none"
          scrollOffset={0}
          scrollOffsetMax={0}
          scrollTo={null}
          style={
            Object {
              "flex": 1,
              "justifyContent": "center",
              "margin": 37.5,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          swipeThreshold={100}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#ffffff",
                  "borderRadius": 4,
                  "minWidth": 270,
                }
              }
            >
              <View
                style={
                  Object {
                    "padding": 24,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "fontSize": 17,
                      "fontWeight": "600",
                      "marginBottom": 8,
                    }
                  }
                >
                  Create schedule
                </Text>
                <Text
                  style={
                    Object {
                      "fontSize": 17,
                      "marginBottom": 8,
                    }
                  }
                >
                  Type a name for the new schedule:
                </Text>
                <View
                  style={
                    Object {
                      "paddingHorizontal": 0,
                      "width": "100%",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomColor": "#d9d9d9",
                        "borderBottomWidth": 1,
                        "borderColor": "#86939e",
                        "flexDirection": "row",
                        "transform": Array [
                          Object {
                            "translateX": 0,
                          },
                        ],
                      }
                    }
                  >
                    <TextInput
                      allowFontScaling={true}
                      maxLength={30}
                      onChangeText={[Function]}
                      shake={true}
                      style={
                        Object {
                          "alignSelf": "center",
                          "color": "black",
                          "flex": 1,
                          "fontSize": 18,
                          "minHeight": 40,
                        }
                      }
                      testID="RNE__Input__text-input"
                      underlineColorAndroid="transparent"
                      value=""
                    />
                  </View>
                </View>
              </View>
              <View
                style={
                  Object {
                    "borderTopColor": "#d9d9d9",
                    "borderTopWidth": 1,
                    "flexDirection": "row",
                    "justifyContent": "flex-end",
                    "paddingBottom": 4,
                    "paddingLeft": 18,
                    "paddingRight": 18,
                    "paddingTop": 4,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "borderRadius": 3,
                    }
                  }
                >
                  <View
                    accessible={true}
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "transparent",
                          "borderColor": "#2089dc",
                          "borderRadius": 3,
                          "borderWidth": 0,
                          "flexDirection": "row",
                          "justifyContent": "center",
                          "padding": 8,
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#2089dc",
                            "fontSize": 18,
                            "paddingBottom": 1,
                            "paddingTop": 2,
                            "textAlign": "center",
                          }
                        }
                      >
                        Cancel
                      </Text>
                    </View>
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "borderRadius": 3,
                    }
                  }
                >
                  <View
                    accessible={true}
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "transparent",
                          "borderColor": "#2089dc",
                          "borderRadius": 3,
                          "borderWidth": 0,
                          "flexDirection": "row",
                          "justifyContent": "center",
                          "padding": 8,
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#2089dc",
                            "fontSize": 18,
                            "paddingBottom": 1,
                            "paddingTop": 2,
                            "textAlign": "center",
                          }
                        }
                      >
                        OK
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </Modal>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <Text />
      <Text
        style={
          Object {
            "fontSize": 17,
          }
        }
      >
        No schedules yet
      </Text>
      <Text
        style={
          Object {
            "color": "#5e5e5e",
            "fontSize": 15,
          }
        }
      >
        Create a schedule to set alarms
      </Text>
    </View>
  </View>
</RCTSafeAreaView>
`;
